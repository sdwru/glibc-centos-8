commit 5f1743d118047ff1fbefe713f2397090e0418deb
Author: Stefan Liebler <stli@linux.ibm.com>
Date:   Tue Dec 18 13:57:04 2018 +0100

    S390: Unify 31/64bit memset.
    
    The implementation of memset for s390-32 (31bit) and
    s390-64 (64bit) is nearly the same.
    This patch unifies it for maintability reasons.
    
    __memset_z10 and __memset_z196 differs between 31 and 64bit:
    -31bit needs .machinemode "zarch_nohighgprs" and llgfr   %r4,%r4
    -lr vs lgr and some other instructions:
    But lgr and co can be also used on 31bit as this ifunc variant
    is only called if we are on a zarch machine.
    
    __memset_default differs between 31 and 64bit:
    -Some 31bit vs 64bit instructions (e.g. ltr vs ltgr.
    Solved with 31/64 specific instruction macros).
    -The address of mvc instruction is setup in different ways
    (larl vs bras). Solved with #if defined __s390x__.
    
    Otherwise 31/64bit implementation has the same structure of the code.
    
    ChangeLog:
    
            * sysdeps/s390/s390-64/memset.S: Move to ...
            * sysdeps/s390/memset.S: ... here.
            Adjust to be usable for 31/64bit.
            * sysdeps/s390/s390-32/memset.S: Delete File.
            * sysdeps/s390/multiarch/Makefile (sysdep_routines): Add memset.
            * sysdeps/s390/s390-32/multiarch/Makefile (sysdep_routines):
            Remove memset.
            * sysdeps/s390/s390-64/multiarch/Makefile: Likewise.
            * sysdeps/s390/s390-64/multiarch/memset-s390x.S: Move to ...
            * sysdeps/s390/multiarch/memset-s390x.S: ... here.
            Adjust to be usable for 31/64bit.
            * sysdeps/s390/s390-32/multiarch/memset-s390.S: Delete File.
            * sysdeps/s390/s390-64/multiarch/memset.c: Move to ...
            * sysdeps/s390/multiarch/memset.c: ... here.
            * sysdeps/s390/s390-32/multiarch/memset.c: Delete File.

diff --git a/sysdeps/s390/s390-64/memset.S b/sysdeps/s390/memset.S
similarity index 58%
rename from sysdeps/s390/s390-64/memset.S
rename to sysdeps/s390/memset.S
index 8799c6592ce2dacf..72e7c5a42efbaf6c 100644
--- a/sysdeps/s390/s390-64/memset.S
+++ b/sysdeps/s390/memset.S
@@ -1,4 +1,4 @@
-/* Set a block of memory to some byte value.  64 bit S/390 version.
+/* Set a block of memory to some byte value.  31/64 bit S/390 version.
    Copyright (C) 2001-2018 Free Software Foundation, Inc.
    Contributed by Martin Schwidefsky (schwidefsky@de.ibm.com).
    This file is part of the GNU C Library.
@@ -28,33 +28,60 @@
 
        .text
 
+#if defined __s390x__
+# define LTGR	ltgr
+# define CGHI	cghi
+# define LGR	lgr
+# define AGHI	aghi
+# define BRCTG	brctg
+#else
+# define LTGR	ltr
+# define CGHI	chi
+# define LGR	lr
+# define AGHI	ahi
+# define BRCTG	brct
+#endif /* ! defined __s390x__  */
+
 #ifdef USE_MULTIARCH
 ENTRY(__memset_default)
 #else
 ENTRY(memset)
 #endif
+#if defined __s390x__
 	.machine "z900"
-	ltgr    %r4,%r4
-	je      .L_Z900_4
+#else
+	.machine "g5"
+#endif /* ! defined __s390x__  */
+	LTGR    %r4,%r4
+	je      .L_Z900_G5_4
 	stc     %r3,0(%r2)
-	cghi    %r4,1
-	lgr     %r1,%r2
-	je      .L_Z900_4
-	aghi    %r4,-2
+	CGHI    %r4,1
+	LGR     %r1,%r2
+	je      .L_Z900_G5_4
+	AGHI    %r4,-2
+#if defined __s390x__
+	larl    %r5,.L_Z900_G5_18
 	srlg    %r3,%r4,8
-	ltgr    %r3,%r3
-	jne     .L_Z900_14
-.L_Z900_3:
-	larl    %r3,.L_Z900_18
-	ex      %r4,0(%r3)
-.L_Z900_4:
+# define Z900_G5_EX_D 0
+#else
+	basr    %r5,0
+.L_Z900_G5_19:
+# define Z900_G5_EX_D .L_Z900_G5_18-.L_Z900_G5_19
+	lr      %r3,%r4
+	srl     %r3,8
+#endif /* ! defined __s390x__  */
+	LTGR    %r3,%r3
+	jne     .L_Z900_G5_14
+.L_Z900_G5_3:
+	ex      %r4,Z900_G5_EX_D(%r5)
+.L_Z900_G5_4:
 	br      %r14
-.L_Z900_14:
+.L_Z900_G5_14:
 	mvc     1(256,%r1),0(%r1)
 	la      %r1,256(%r1)
-	brctg   %r3,.L_Z900_14
-	j       .L_Z900_3
-.L_Z900_18:
+	BRCTG   %r3,.L_Z900_G5_14
+	j       .L_Z900_G5_3
+.L_Z900_G5_18:
 	mvc     1(1,%r1),0(%r1)
 #ifdef USE_MULTIARCH
 END(__memset_default)
@@ -62,3 +89,9 @@ END(__memset_default)
 END(memset)
 libc_hidden_builtin_def (memset)
 #endif
+
+#undef LTGR
+#undef CGHI
+#undef LGR
+#undef AGHI
+#undef BRCTG
diff --git a/sysdeps/s390/multiarch/Makefile b/sysdeps/s390/multiarch/Makefile
index c893ebc5659fd4ae..93ad21bfa2686ee5 100644
--- a/sysdeps/s390/multiarch/Makefile
+++ b/sysdeps/s390/multiarch/Makefile
@@ -19,7 +19,8 @@ sysdep_routines += strlen strlen-vx strlen-c \
 		   rawmemchr rawmemchr-vx rawmemchr-c \
 		   memccpy memccpy-vx memccpy-c \
 		   memrchr memrchr-vx memrchr-c \
-		   mempcpy
+		   mempcpy \
+		   memset memset-s390x
 endif
 
 ifeq ($(subdir),wcsmbs)
diff --git a/sysdeps/s390/s390-64/multiarch/memset-s390x.S b/sysdeps/s390/multiarch/memset-s390x.S
similarity index 90%
rename from sysdeps/s390/s390-64/multiarch/memset-s390x.S
rename to sysdeps/s390/multiarch/memset-s390x.S
index 0c5aaef34fdf47e6..aca3ac3fda1dd228 100644
--- a/sysdeps/s390/s390-64/multiarch/memset-s390x.S
+++ b/sysdeps/s390/multiarch/memset-s390x.S
@@ -1,4 +1,4 @@
-/* Set a block of memory to some byte value.  64 bit S/390 version.
+/* Set a block of memory to some byte value.  31/64 bit S/390 version.
    Copyright (C) 2012-2018 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
@@ -31,6 +31,10 @@
 
 ENTRY(__memset_z196)
 	.machine "z196"
+	.machinemode "zarch_nohighgprs"
+# if !defined __s390x__
+	llgfr	%r4,%r4
+# endif /* !defined __s390x__  */
 	ltgr    %r4,%r4
 	je      .L_Z196_4
 	stc     %r3,0(%r2)
@@ -61,6 +65,10 @@ END(__memset_z196)
 
 ENTRY(__memset_z10)
 	.machine "z10"
+	.machinemode "zarch_nohighgprs"
+# if !defined __s390x__
+	llgfr	%r4,%r4
+# endif /* !defined __s390x__  */
 	cgije   %r4,0,.L_Z10_4
 	stc     %r3,0(%r2)
 	lgr     %r1,%r2
diff --git a/sysdeps/s390/s390-32/multiarch/memset.c b/sysdeps/s390/multiarch/memset.c
similarity index 100%
rename from sysdeps/s390/s390-32/multiarch/memset.c
rename to sysdeps/s390/multiarch/memset.c
diff --git a/sysdeps/s390/s390-32/memset.S b/sysdeps/s390/s390-32/memset.S
deleted file mode 100644
index 57f08e1cae1abd01..0000000000000000
--- a/sysdeps/s390/s390-32/memset.S
+++ /dev/null
@@ -1,65 +0,0 @@
-/* Set a block of memory to some byte value.  For IBM S390
-   Copyright (C) 2012-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-
-#include "sysdep.h"
-#include "asm-syntax.h"
-
-/* INPUT PARAMETERS
-     %r2 = address to memory area
-     %r3 = byte to fill memory with
-     %r4 = number of bytes to fill.  */
-
-       .text
-
-#ifdef USE_MULTIARCH
-ENTRY(__memset_default)
-#else
-ENTRY(memset)
-#endif
-	.machine "g5"
-	basr    %r5,0
-.L_G5_19:
-	ltr     %r4,%r4
-	je      .L_G5_4
-	stc     %r3,0(%r2)
-	chi     %r4,1
-	lr      %r1,%r2
-	je      .L_G5_4
-	ahi     %r4,-2
-	lr      %r3,%r4
-	srl     %r3,8
-	ltr     %r3,%r3
-	jne     .L_G5_14
-	ex      %r4,.L_G5_20-.L_G5_19(%r5)
-.L_G5_4:
-	br      %r14
-.L_G5_14:
-	mvc     1(256,%r1),0(%r1)
-	la      %r1,256(%r1)
-	brct    %r3,.L_G5_14
-	ex      %r4,.L_G5_20-.L_G5_19(%r5)
-	j       .L_G5_4
-.L_G5_20:
-	mvc     1(1,%r1),0(%r1)
-#ifdef USE_MULTIARCH
-END(__memset_default)
-#else
-END(memset)
-libc_hidden_builtin_def (memset)
-#endif
diff --git a/sysdeps/s390/s390-32/multiarch/Makefile b/sysdeps/s390/s390-32/multiarch/Makefile
index f8aee14bbd4736ad..4b11e28656ac19ab 100644
--- a/sysdeps/s390/s390-32/multiarch/Makefile
+++ b/sysdeps/s390/s390-32/multiarch/Makefile
@@ -1,4 +1,3 @@
 ifeq ($(subdir),string)
-sysdep_routines += memset memset-s390 memcpy memcpy-s390 \
-		   memcmp memcmp-s390
+sysdep_routines += memcpy memcpy-s390 memcmp memcmp-s390
 endif
diff --git a/sysdeps/s390/s390-32/multiarch/memset-s390.S b/sysdeps/s390/s390-32/multiarch/memset-s390.S
deleted file mode 100644
index b092073d6bef6b56..0000000000000000
--- a/sysdeps/s390/s390-32/multiarch/memset-s390.S
+++ /dev/null
@@ -1,116 +0,0 @@
-/* Set a block of memory to some byte value.  32 bit S/390 version.
-   Copyright (C) 2012-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-
-#include "sysdep.h"
-#include "asm-syntax.h"
-
-/* INPUT PARAMETERS
-     %r2 = address of memory area
-     %r3 = byte to fill memory with
-     %r4 = number of bytes to fill.  */
-
-       .text
-
-#if IS_IN (libc)
-
-ENTRY(__memset_z196)
-	.machine "z196"
-	.machinemode "zarch_nohighgprs"
-	llgfr   %r4,%r4
-	ltgr    %r4,%r4
-	je      .L_Z196_4
-	stc     %r3,0(%r2)
-	lr      %r1,%r2
-	cghi    %r4,1
-	je      .L_Z196_4
-	aghi    %r4,-2
-	srlg    %r5,%r4,8
-	ltgr    %r5,%r5
-	jne     .L_Z196_1
-.L_Z196_3:
-	exrl    %r4,.L_Z196_17
-.L_Z196_4:
-	br      %r14
-.L_Z196_1:
-	cgfi	%r5,1048576
-	jh	__memset_mvcle	   # Switch to mvcle for >256MB
-.L_Z196_2:
-	pfd     2,1024(%r1)
-	mvc     1(256,%r1),0(%r1)
-	aghi    %r5,-1
-	la      %r1,256(%r1)
-	jne     .L_Z196_2
-	j       .L_Z196_3
-.L_Z196_17:
-	mvc     1(1,%r1),0(%r1)
-END(__memset_z196)
-
-ENTRY(__memset_z10)
-	.machine "z10"
-	.machinemode "zarch_nohighgprs"
-	llgfr   %r4,%r4
-	cgije   %r4,0,.L_Z10_4
-	stc     %r3,0(%r2)
-	lr      %r1,%r2
-	cgije   %r4,1,.L_Z10_4
-	aghi    %r4,-2
-	srlg    %r5,%r4,8
-	cgijlh  %r5,0,.L_Z10_15
-.L_Z10_3:
-	exrl    %r4,.L_Z10_18
-.L_Z10_4:
-	br      %r14
-.L_Z10_15:
-	cgfi	%r5,163840          # Switch to mvcle for >40MB
-	jh	__memset_mvcle
-.L_Z10_14:
-	pfd     2,1024(%r1)
-	mvc     1(256,%r1),0(%r1)
-	la      %r1,256(%r1)
-	brctg   %r5,.L_Z10_14
-	j       .L_Z10_3
-.L_Z10_18:
-	mvc     1(1,%r1),0(%r1)
-END(__memset_z10)
-
-ENTRY(__memset_mvcle)
-	ahi	%r4,2               # take back the change done by the caller
-	lr      %r0,%r2             # save source address
-	lr      %r1,%r3             # move pad byte to R1
-	lr      %r3,%r4
-	sr      %r4,%r4             # no source for MVCLE, only a pad byte
-	sr      %r5,%r5
-.L0:    mvcle   %r2,%r4,0(%r1)      # thats it, MVCLE is your friend
-	jo      .L0
-	lr      %r2,%r0             # return value is source address
-.L1:
-	br      %r14
-END(__memset_mvcle)
-
-#endif /* IS_IN (libc) */
-
-#include "../memset.S"
-
-#if !IS_IN (libc)
-.globl   memset
-.set     memset,__memset_default
-#elif defined SHARED && IS_IN (libc)
-.globl   __GI_memset
-.set     __GI_memset,__memset_default
-#endif
diff --git a/sysdeps/s390/s390-64/multiarch/Makefile b/sysdeps/s390/s390-64/multiarch/Makefile
index 91053b536420aabb..e4870c7ee177ad0d 100644
--- a/sysdeps/s390/s390-64/multiarch/Makefile
+++ b/sysdeps/s390/s390-64/multiarch/Makefile
@@ -1,4 +1,3 @@
 ifeq ($(subdir),string)
-sysdep_routines += memset memset-s390x memcpy memcpy-s390x \
-		   memcmp memcmp-s390x
+sysdep_routines += memcpy memcpy-s390x memcmp memcmp-s390x
 endif
diff --git a/sysdeps/s390/s390-64/multiarch/memset.c b/sysdeps/s390/s390-64/multiarch/memset.c
deleted file mode 100644
index 760b3e9df201b8b4..0000000000000000
--- a/sysdeps/s390/s390-64/multiarch/memset.c
+++ /dev/null
@@ -1,26 +0,0 @@
-/* Multiple versions of memset.
-   Copyright (C) 2015-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-#if IS_IN (libc)
-# define memset __redirect_memset
-# include <string.h>
-# undef memset
-# include <ifunc-resolve.h>
-
-s390_libc_ifunc (__redirect_memset, __memset, memset)
-#endif
