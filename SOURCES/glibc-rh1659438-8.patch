commit df3eb8de31a530f285f54f3c41cd7b636816c062
Author: Stefan Liebler <stli@linux.ibm.com>
Date:   Tue Dec 18 13:57:06 2018 +0100

    S390: Unify 31/64bit memcpy.
    
    The implementation of memcpy/mempcpy for s390-32 (31bit)
    and s390-64 (64bit) is nearly the same.
    This patch unifies it for maintability reasons.
    
    __mem[p]cpy_z10 and __mem[p]cpy_z196 differs between 31 and 64bit:
    -31bit needs .machinemode "zarch_nohighgprs" and llgfr   %r4,%r4
    -lr vs lgr; lgr can be also used on 31bit as this ifunc variant
    is only called if we are on a zarch machine.
    
    __mem[p]cpy_default differs between 31 and 64bit:
    -Some 31bit vs 64bit instructions (e.g. ltr vs ltgr.
    Solved with 31/64 specific instruction macros).
    -The address of mvc instruction is setup in different ways
    (larl vs bras). Solved with #if defined __s390x__.
    
    __memcpy_mvcle differs between 31 and 64bit:
    -lr vs lgr; ahi vs aghi;
    Solved with 31/64bit specific instruction macros.
    
    Otherwise 31/64bit implementation has the same structure of the code.
    
    ChangeLog:
    
            * sysdeps/s390/s390-64/memcpy.S: Move to ...
            * sysdeps/s390/memcpy.S: ... here.
            Adjust to be usable for 31/64bit.
            * sysdeps/s390/s390-32/memcpy.S: Delete File.
            * sysdeps/s390/multiarch/Makefile (sysdep_routines): Add memcpy.
            * sysdeps/s390/s390-32/multiarch/Makefile: Delete file.
            * sysdeps/s390/s390-64/multiarch/Makefile: Likewise.
            * sysdeps/s390/s390-64/multiarch/memcpy-s390x.S: Move to ...
            * sysdeps/s390/multiarch/memcpy-s390x.S: ... here.
            Adjust to be usable for 31/64bit.
            * sysdeps/s390/s390-32/multiarch/memcpy-s390.S: Delete File.
            * sysdeps/s390/s390-64/multiarch/memcpy.c: Move to ...
            * sysdeps/s390/multiarch/memcpy.c: ... here.
            * sysdeps/s390/s390-32/multiarch/memcpy.c: Delete File.

diff --git a/sysdeps/s390/s390-64/memcpy.S b/sysdeps/s390/memcpy.S
similarity index 52%
rename from sysdeps/s390/s390-64/memcpy.S
rename to sysdeps/s390/memcpy.S
index 2e5490df23d64325..2a6c6b750377c7bb 100644
--- a/sysdeps/s390/s390-64/memcpy.S
+++ b/sysdeps/s390/memcpy.S
@@ -1,4 +1,4 @@
-/* memcpy - copy a block from source to destination.  64 bit S/390 version.
+/* memcpy - copy a block from source to destination.  31/64 bit S/390 version.
    Copyright (C) 2012-2018 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
@@ -25,13 +25,31 @@
      %r3 = address of source memory area
      %r4 = number of bytes to copy.  */
 
-
        .text
+
+#if defined __s390x__
+# define LTGR	ltgr
+# define CGHI	cghi
+# define LGR	lgr
+# define AGHI	aghi
+# define BRCTG	brctg
+#else
+# define LTGR	ltr
+# define CGHI	chi
+# define LGR	lr
+# define AGHI	ahi
+# define BRCTG	brct
+#endif /* ! defined __s390x__  */
+
 ENTRY(__mempcpy)
+#if defined __s390x__
 	.machine "z900"
-	lgr     %r1,%r2             # Use as dest
+#else
+	.machine "g5"
+#endif /* ! defined __s390x__  */
+	LGR     %r1,%r2             # Use as dest
 	la      %r2,0(%r4,%r2)      # Return dest + n
-	j	.L_Z900_start
+	j	.L_Z900_G5_start
 END(__mempcpy)
 #ifndef USE_MULTIARCH
 libc_hidden_def (__mempcpy)
@@ -40,30 +58,46 @@ libc_hidden_builtin_def (mempcpy)
 #endif
 
 ENTRY(memcpy)
+#if defined __s390x__
 	.machine "z900"
-	lgr     %r1,%r2             # r1: Use as dest ; r2: Return dest
-.L_Z900_start:
-	ltgr    %r4,%r4
-	je      .L_Z900_4
-	aghi    %r4,-1
-	srlg    %r5,%r4,8
-	ltgr    %r5,%r5
-	jne     .L_Z900_13
-.L_Z900_3:
-	larl    %r5,.L_Z900_15
-	ex      %r4,0(%r5)
-.L_Z900_4:
+#else
+	.machine "g5"
+#endif /* ! defined __s390x__  */
+	LGR     %r1,%r2             # r1: Use as dest ; r2: Return dest
+.L_Z900_G5_start:
+	LTGR    %r4,%r4
+	je      .L_Z900_G5_4
+	AGHI    %r4,-1
+#if defined __s390x__
+	srlg	%r5,%r4,8
+#else
+	lr	%r5,%r4
+	srl	%r5,8
+#endif /* ! defined __s390x__  */
+	LTGR    %r5,%r5
+	jne     .L_Z900_G5_13
+.L_Z900_G5_3:
+#if defined __s390x__
+	larl    %r5,.L_Z900_G5_15
+# define Z900_G5_EX_D 0
+#else
+	basr    %r5,0
+.L_Z900_G5_14:
+# define Z900_G5_EX_D .L_Z900_G5_15-.L_Z900_G5_14
+#endif /* ! defined __s390x__  */
+	ex      %r4,Z900_G5_EX_D(%r5)
+.L_Z900_G5_4:
 	br      %r14
-.L_Z900_13:
-	cghi	%r5,4096            # Switch to mvcle for copies >1MB
+.L_Z900_G5_13:
+	CGHI	%r5,4096            # Switch to mvcle for copies >1MB
 	jh      __memcpy_mvcle
-.L_Z900_12:
+.L_Z900_G5_12:
 	mvc     0(256,%r1),0(%r3)
 	la      %r1,256(%r1)
 	la      %r3,256(%r3)
-	brctg   %r5,.L_Z900_12
-	j       .L_Z900_3
-.L_Z900_15:
+	BRCTG   %r5,.L_Z900_G5_12
+	j       .L_Z900_G5_3
+.L_Z900_G5_15:
 	mvc     0(1,%r1),0(%r3)
 END(memcpy)
 #ifndef USE_MULTIARCH
@@ -74,15 +108,21 @@ ENTRY(__memcpy_mvcle)
 	# Using as standalone function will result in unexpected
 	# results since the length field is incremented by 1 in order to
 	# compensate the changes already done in the functions above.
-	lgr     %r0,%r2             # backup return dest [ + n ]
-	aghi    %r4,1               # length + 1
-	lgr     %r5,%r4             # source length
-	lgr     %r4,%r3             # source address
-	lgr     %r2,%r1             # destination address
-	lgr     %r3,%r5             # destination length = source length
+	LGR     %r0,%r2             # backup return dest [ + n ]
+	AGHI    %r4,1               # length + 1
+	LGR     %r5,%r4             # source length
+	LGR     %r4,%r3             # source address
+	LGR     %r2,%r1             # destination address
+	LGR     %r3,%r5             # destination length = source length
 .L_MVCLE_1:
 	mvcle   %r2,%r4,0           # thats it, MVCLE is your friend
 	jo      .L_MVCLE_1
-	lgr     %r2,%r0             # return destination address
+	LGR     %r2,%r0             # return destination address
 	br      %r14
 END(__memcpy_mvcle)
+
+#undef LTGR
+#undef CGHI
+#undef LGR
+#undef AGHI
+#undef BRCTG
diff --git a/sysdeps/s390/multiarch/Makefile b/sysdeps/s390/multiarch/Makefile
index c893ebc5659fd4ae..3cbd5fad69e355a5 100644
--- a/sysdeps/s390/multiarch/Makefile
+++ b/sysdeps/s390/multiarch/Makefile
@@ -19,7 +19,7 @@ sysdep_routines += strlen strlen-vx strlen-c \
 		   rawmemchr rawmemchr-vx rawmemchr-c \
 		   memccpy memccpy-vx memccpy-c \
 		   memrchr memrchr-vx memrchr-c \
-		   mempcpy
+		   mempcpy memcpy memcpy-s390x
 endif
 
 ifeq ($(subdir),wcsmbs)
diff --git a/sysdeps/s390/s390-64/multiarch/memcpy-s390x.S b/sysdeps/s390/multiarch/memcpy-s390x.S
similarity index 89%
rename from sysdeps/s390/s390-64/multiarch/memcpy-s390x.S
rename to sysdeps/s390/multiarch/memcpy-s390x.S
index 6d60a70834c32120..b38caac72b8742e6 100644
--- a/sysdeps/s390/s390-64/multiarch/memcpy-s390x.S
+++ b/sysdeps/s390/multiarch/memcpy-s390x.S
@@ -1,4 +1,4 @@
-/* CPU specific memcpy implementations.  64 bit S/390 version.
+/* CPU specific memcpy implementations.  31/64 bit S/390 version.
    Copyright (C) 2012-2018 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
@@ -31,6 +31,7 @@
 
 ENTRY(____mempcpy_z196)
 	.machine "z196"
+	.machinemode "zarch_nohighgprs"
 	lgr     %r1,%r2         # Use as dest
 	la      %r2,0(%r4,%r2)  # Return dest + n
 	j	.L_Z196_start
@@ -38,8 +39,12 @@ END(____mempcpy_z196)
 
 ENTRY(__memcpy_z196)
 	.machine "z196"
+	.machinemode "zarch_nohighgprs"
 	lgr     %r1,%r2         # r1: Use as dest ; r2: Return dest
 .L_Z196_start:
+# if !defined __s390x__
+	llgfr	%r4,%r4
+# endif /* !defined __s390x__  */
 	ltgr    %r4,%r4
 	je      .L_Z196_4
 	aghi    %r4,-1
@@ -68,6 +73,7 @@ END(__memcpy_z196)
 
 ENTRY(____mempcpy_z10)
 	.machine "z10"
+	.machinemode "zarch_nohighgprs"
 	lgr     %r1,%r2         # Use as dest
 	la      %r2,0(%r4,%r2)  # Return dest + n
 	j	.L_Z10_start
@@ -75,8 +81,12 @@ END(____mempcpy_z10)
 
 ENTRY(__memcpy_z10)
 	.machine "z10"
+	.machinemode "zarch_nohighgprs"
 	lgr     %r1,%r2         # r1: Use as dest ; r2: Return dest
 .L_Z10_start:
+# if !defined __s390x__
+	llgfr	%r4,%r4
+# endif /* !defined __s390x__  */
 	cgije   %r4,0,.L_Z10_4
 	aghi    %r4,-1
 	srlg    %r5,%r4,8
diff --git a/sysdeps/s390/s390-32/multiarch/memcpy.c b/sysdeps/s390/multiarch/memcpy.c
similarity index 100%
rename from sysdeps/s390/s390-32/multiarch/memcpy.c
rename to sysdeps/s390/multiarch/memcpy.c
diff --git a/sysdeps/s390/s390-32/memcpy.S b/sysdeps/s390/s390-32/memcpy.S
deleted file mode 100644
index 493cc18aba67d6ec..0000000000000000
--- a/sysdeps/s390/s390-32/memcpy.S
+++ /dev/null
@@ -1,89 +0,0 @@
-/* memcpy - copy a block from source to destination.  S/390 version.
-   Copyright (C) 2012-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-
-#include "sysdep.h"
-#include "asm-syntax.h"
-
-/* INPUT PARAMETERS
-     %r2 = address of destination memory area
-     %r3 = address of source memory area
-     %r4 = number of bytes to copy.  */
-
-       .text
-ENTRY(__mempcpy)
-	.machine "g5"
-	lr      %r1,%r2             # Use as dest
-	la      %r2,0(%r4,%r2)      # Return dest + n
-	j	.L_G5_start
-END(__mempcpy)
-#ifndef USE_MULTIARCH
-libc_hidden_def (__mempcpy)
-weak_alias (__mempcpy, mempcpy)
-libc_hidden_builtin_def (mempcpy)
-#endif
-
-ENTRY(memcpy)
-	.machine "g5"
-	lr      %r1,%r2             # r1: Use as dest ; r2: Return dest
-.L_G5_start:
-	ltr     %r4,%r4
-	je      .L_G5_99
-	ahi     %r4,-1
-	lr      %r5,%r4
-	srl     %r5,8
-	ltr     %r5,%r5
-	jne     .L_G5_13
-.L_G5_4:
-	basr    %r5,0
-.L_G5_16:
-	ex      %r4,.L_G5_17-.L_G5_16(%r5)
-.L_G5_99:
-	br      %r14
-.L_G5_13:
-	chi	%r5,4096            # Switch to mvcle for copies >1MB
-	jh	__memcpy_mvcle
-.L_G5_12:
-	mvc     0(256,%r1),0(%r3)
-	la      %r1,256(%r1)
-	la      %r3,256(%r3)
-	brct    %r5,.L_G5_12
-	j       .L_G5_4
-.L_G5_17:
-	mvc     0(1,%r1),0(%r3)
-END(memcpy)
-#ifndef USE_MULTIARCH
-libc_hidden_builtin_def (memcpy)
-#endif
-
-ENTRY(__memcpy_mvcle)
-	# Using as standalone function will result in unexpected
-	# results since the length field is incremented by 1 in order to
-	# compensate the changes already done in the functions above.
-	lr      %r0,%r2             # backup return dest [ + n ]
-	ahi     %r4,1               # length + 1
-	lr      %r5,%r4             # source length
-	lr      %r4,%r3             # source address
-	lr      %r2,%r1             # destination address
-	lr      %r3,%r5             # destination length = source length
-.L_MVCLE_1:
-	mvcle   %r2,%r4,0           # thats it, MVCLE is your friend
-	jo      .L_MVCLE_1
-	lr      %r2,%r0             # return destination address
-	br      %r14
-END(__memcpy_mvcle)
diff --git a/sysdeps/s390/s390-32/multiarch/Makefile b/sysdeps/s390/s390-32/multiarch/Makefile
deleted file mode 100644
index 82a7492eb8436479..0000000000000000
--- a/sysdeps/s390/s390-32/multiarch/Makefile
+++ /dev/null
@@ -1,3 +0,0 @@
-ifeq ($(subdir),string)
-sysdep_routines += memcpy memcpy-s390
-endif
diff --git a/sysdeps/s390/s390-32/multiarch/memcpy-s390.S b/sysdeps/s390/s390-32/multiarch/memcpy-s390.S
deleted file mode 100644
index aad13bd07c31dab9..0000000000000000
--- a/sysdeps/s390/s390-32/multiarch/memcpy-s390.S
+++ /dev/null
@@ -1,128 +0,0 @@
-/* CPU specific memcpy implementations.  32 bit S/390 version.
-   Copyright (C) 2012-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-
-#include "sysdep.h"
-#include "asm-syntax.h"
-
-/* INPUT PARAMETERS
-     %r2 = target operands address
-     %r3 = source operands address
-     %r4 = number of bytes to copy.  */
-
-       .text
-
-#if defined SHARED && IS_IN (libc)
-
-ENTRY(____mempcpy_z196)
-	.machine "z196"
-	.machinemode "zarch_nohighgprs"
-	lr      %r1,%r2         # Use as dest
-	la      %r2,0(%r4,%r2)  # Return dest + n
-	j	.L_Z196_start
-END(____mempcpy_z196)
-
-ENTRY(__memcpy_z196)
-	.machine "z196"
-	.machinemode "zarch_nohighgprs"
-	lr      %r1,%r2         # r1: Use as dest ; r2: Return dest
-.L_Z196_start:
-	llgfr   %r4,%r4
-	ltgr    %r4,%r4
-	je      .L_Z196_4
-	aghi    %r4,-1
-	srlg    %r5,%r4,8
-	ltgr    %r5,%r5
-	jne     .L_Z196_5
-.L_Z196_3:
-	exrl    %r4,.L_Z196_14
-.L_Z196_4:
-	br      %r14
-.L_Z196_5:
-	cgfi    %r5,262144      # Switch to mvcle for copies >64MB
-	jh      __memcpy_mvcle
-.L_Z196_2:
-	pfd     1,768(%r3)
-	pfd     2,768(%r1)
-	mvc     0(256,%r1),0(%r3)
-	aghi    %r5,-1
-	la      %r1,256(%r1)
-	la      %r3,256(%r3)
-	jne     .L_Z196_2
-	j       .L_Z196_3
-.L_Z196_14:
-	mvc     0(1,%r1),0(%r3)
-END(__memcpy_z196)
-
-ENTRY(____mempcpy_z10)
-	.machine "z10"
-	.machinemode "zarch_nohighgprs"
-	lr      %r1,%r2         # Use as dest
-	la      %r2,0(%r4,%r2)  # Return dest + n
-	j	.L_Z10_start
-END(____mempcpy_z10)
-
-ENTRY(__memcpy_z10)
-	.machine "z10"
-	.machinemode "zarch_nohighgprs"
-	lr      %r1,%r2         # r1: Use as dest ; r2: Return dest
-.L_Z10_start:
-	llgfr   %r4,%r4
-	cgije   %r4,0,.L_Z10_4
-	aghi    %r4,-1
-	srlg    %r5,%r4,8
-	cgijlh  %r5,0,.L_Z10_13
-.L_Z10_3:
-	exrl    %r4,.L_Z10_15
-.L_Z10_4:
-	br      %r14
-.L_Z10_13:
-	cgfi    %r5,65535	# Switch to mvcle for copies >16MB
-	jh      __memcpy_mvcle
-.L_Z10_12:
-	pfd     1,768(%r3)
-	pfd     2,768(%r1)
-	mvc     0(256,%r1),0(%r3)
-	la      %r1,256(%r1)
-	la      %r3,256(%r3)
-	brctg   %r5,.L_Z10_12
-	j       .L_Z10_3
-.L_Z10_15:
-	mvc     0(1,%r1),0(%r3)
-END(__memcpy_z10)
-
-# define __mempcpy ____mempcpy_default
-#endif /* SHARED && IS_IN (libc) */
-
-#define memcpy __memcpy_default
-#include "../memcpy.S"
-#undef memcpy
-
-#if defined SHARED && IS_IN (libc)
-.globl   __GI_memcpy
-.set     __GI_memcpy,__memcpy_default
-.globl   __GI_mempcpy
-.set     __GI_mempcpy,____mempcpy_default
-.globl   __GI___mempcpy
-.set     __GI___mempcpy,____mempcpy_default
-#else
-.globl   memcpy
-.set     memcpy,__memcpy_default
-.weak    mempcpy
-.set     mempcpy,__mempcpy
-#endif
diff --git a/sysdeps/s390/s390-64/multiarch/Makefile b/sysdeps/s390/s390-64/multiarch/Makefile
deleted file mode 100644
index 8a043e3327a1527a..0000000000000000
--- a/sysdeps/s390/s390-64/multiarch/Makefile
+++ /dev/null
@@ -1,3 +0,0 @@
-ifeq ($(subdir),string)
-sysdep_routines += memcpy memcpy-s390x
-endif
diff --git a/sysdeps/s390/s390-64/multiarch/memcpy.c b/sysdeps/s390/s390-64/multiarch/memcpy.c
deleted file mode 100644
index c9577a854a0c7e68..0000000000000000
--- a/sysdeps/s390/s390-64/multiarch/memcpy.c
+++ /dev/null
@@ -1,27 +0,0 @@
-/* Multiple versions of memcpy.
-   Copyright (C) 2015-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-/* In the static lib memcpy is needed before the reloc is resolved.  */
-#if defined SHARED && IS_IN (libc)
-# define memcpy __redirect_memcpy
-# include <string.h>
-# undef memcpy
-# include <ifunc-resolve.h>
-
-s390_libc_ifunc (__redirect_memcpy, __memcpy, memcpy)
-#endif
