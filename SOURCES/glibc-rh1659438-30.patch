commit 572cca93fafa59d641c11372a9556722d95b038c
Author: Stefan Liebler <stli@linux.ibm.com>
Date:   Tue Dec 18 13:57:15 2018 +0100

    S390: Refactor strpbrk ifunc handling.
    
    The ifunc handling for strpbrk is adjusted in order to omit ifunc
    variants if those will never be used as the minimum architecture level
    already supports newer CPUs by default.
    Glibc internal calls will then also use the "newer" ifunc variant.
    
    ChangeLog:
    
            * sysdeps/s390/multiarch/Makefile
            (sysdep_routines): Remove strpbrk variants.
            * sysdeps/s390/Makefile (sysdep_routines): Add strpbrk variants.
            * sysdeps/s390/multiarch/ifunc-impl-list.c
            (__libc_ifunc_impl_list): Refactor ifunc handling for strpbrk.
            * sysdeps/s390/multiarch/strpbrk-c.c: Move to ...
            * sysdeps/s390/strpbrk-c.c: ... here and adjust ifunc handling.
            * sysdeps/s390/multiarch/strpbrk-vx.S: Move to ...
            * sysdeps/s390/strpbrk-vx.S: ... here and adjust ifunc handling.
            * sysdeps/s390/multiarch/strpbrk.c: Move to ...
            * sysdeps/s390/strpbrk.c: ... here and adjust ifunc handling.
            * sysdeps/s390/ifunc-strpbrk.h: New file.

diff --git a/sysdeps/s390/Makefile b/sysdeps/s390/Makefile
index c0a402117197b87f..a21fa7507b1d64a1 100644
--- a/sysdeps/s390/Makefile
+++ b/sysdeps/s390/Makefile
@@ -50,5 +50,6 @@ sysdep_routines += bzero memset memset-z900 \
 		   strchr strchr-vx strchr-c \
 		   strchrnul strchrnul-vx strchrnul-c \
 		   strrchr strrchr-vx strrchr-c \
-		   strspn strspn-vx strspn-c
+		   strspn strspn-vx strspn-c \
+		   strpbrk strpbrk-vx strpbrk-c
 endif
diff --git a/sysdeps/s390/ifunc-strpbrk.h b/sysdeps/s390/ifunc-strpbrk.h
new file mode 100644
index 0000000000000000..4a3138c6bf377286
--- /dev/null
+++ b/sysdeps/s390/ifunc-strpbrk.h
@@ -0,0 +1,52 @@
+/* strpbrk variant information on S/390 version.
+   Copyright (C) 2018 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined USE_MULTIARCH && IS_IN (libc)		\
+  && ! defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT
+# define HAVE_STRPBRK_IFUNC	1
+#else
+# define HAVE_STRPBRK_IFUNC	0
+#endif
+
+#ifdef HAVE_S390_VX_ASM_SUPPORT
+# define HAVE_STRPBRK_IFUNC_AND_VX_SUPPORT HAVE_STRPBRK_IFUNC
+#else
+# define HAVE_STRPBRK_IFUNC_AND_VX_SUPPORT 0
+#endif
+
+#if defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT
+# define STRPBRK_DEFAULT	STRPBRK_Z13
+# define HAVE_STRPBRK_C		0
+# define HAVE_STRPBRK_Z13	1
+#else
+# define STRPBRK_DEFAULT	STRPBRK_C
+# define HAVE_STRPBRK_C		1
+# define HAVE_STRPBRK_Z13	HAVE_STRPBRK_IFUNC_AND_VX_SUPPORT
+#endif
+
+#if HAVE_STRPBRK_C
+# define STRPBRK_C		__strpbrk_c
+#else
+# define STRPBRK_C		NULL
+#endif
+
+#if HAVE_STRPBRK_Z13
+# define STRPBRK_Z13		__strpbrk_vx
+#else
+# define STRPBRK_Z13		NULL
+#endif
diff --git a/sysdeps/s390/multiarch/Makefile b/sysdeps/s390/multiarch/Makefile
index 9b141e338ca551ec..1a3fed9fc88012d1 100644
--- a/sysdeps/s390/multiarch/Makefile
+++ b/sysdeps/s390/multiarch/Makefile
@@ -1,6 +1,5 @@
 ifeq ($(subdir),string)
-sysdep_routines += strpbrk strpbrk-vx strpbrk-c \
-		   strcspn strcspn-vx strcspn-c \
+sysdep_routines += strcspn strcspn-vx strcspn-c \
 		   memchr memchr-vx \
 		   rawmemchr rawmemchr-vx rawmemchr-c \
 		   memccpy memccpy-vx memccpy-c \
diff --git a/sysdeps/s390/multiarch/ifunc-impl-list.c b/sysdeps/s390/multiarch/ifunc-impl-list.c
index c39e1f793aad530c..8e23416730f8a8d5 100644
--- a/sysdeps/s390/multiarch/ifunc-impl-list.c
+++ b/sysdeps/s390/multiarch/ifunc-impl-list.c
@@ -40,6 +40,7 @@
 #include <ifunc-strchrnul.h>
 #include <ifunc-strrchr.h>
 #include <ifunc-strspn.h>
+#include <ifunc-strpbrk.h>
 
 /* Maximum number of IFUNC implementations.  */
 #define MAX_IFUNC	3
@@ -346,6 +347,18 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
 		)
 #endif /* HAVE_STRSPN_IFUNC  */
 
+#if HAVE_STRPBRK_IFUNC
+    IFUNC_IMPL (i, name, strpbrk,
+# if HAVE_STRPBRK_Z13
+		IFUNC_IMPL_ADD (array, i, strpbrk,
+				dl_hwcap & HWCAP_S390_VX, STRPBRK_Z13)
+# endif
+# if HAVE_STRPBRK_C
+		IFUNC_IMPL_ADD (array, i, strpbrk, 1, STRPBRK_C)
+# endif
+		)
+#endif /* HAVE_STRPBRK_IFUNC  */
+
 #ifdef HAVE_S390_VX_ASM_SUPPORT
 
 # define IFUNC_VX_IMPL(FUNC)						\
@@ -382,7 +395,6 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
 
   IFUNC_VX_IMPL (wcsspn);
 
-  IFUNC_VX_IMPL (strpbrk);
   IFUNC_VX_IMPL (wcspbrk);
 
   IFUNC_VX_IMPL (strcspn);
diff --git a/sysdeps/s390/multiarch/strpbrk-c.c b/sysdeps/s390/strpbrk-c.c
similarity index 73%
rename from sysdeps/s390/multiarch/strpbrk-c.c
rename to sysdeps/s390/strpbrk-c.c
index 2c0517aeb52985b3..70cc5db672adb6c9 100644
--- a/sysdeps/s390/multiarch/strpbrk-c.c
+++ b/sysdeps/s390/strpbrk-c.c
@@ -16,13 +16,17 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
-# define STRPBRK  __strpbrk_c
-# ifdef SHARED
-#  undef libc_hidden_builtin_def
-#  define libc_hidden_builtin_def(name)				\
-     __hidden_ver1 (__strpbrk_c, __GI_strpbrk, __strpbrk_c);
-# endif /* SHARED */
+#include <ifunc-strpbrk.h>
+
+#if HAVE_STRPBRK_C
+# if HAVE_STRPBRK_IFUNC
+#  define STRPBRK STRPBRK_C
+#  if defined SHARED && IS_IN (libc)
+#   undef libc_hidden_builtin_def
+#   define libc_hidden_builtin_def(name)			\
+  __hidden_ver1 (__strpbrk_c, __GI_strpbrk, __strpbrk_c);
+#  endif
+# endif
 
 # include <string/strpbrk.c>
-#endif /* HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc) */
+#endif
diff --git a/sysdeps/s390/multiarch/strpbrk-vx.S b/sysdeps/s390/strpbrk-vx.S
similarity index 97%
rename from sysdeps/s390/multiarch/strpbrk-vx.S
rename to sysdeps/s390/strpbrk-vx.S
index e19c550ed404a9a8..0fc7dc143337779f 100644
--- a/sysdeps/s390/multiarch/strpbrk-vx.S
+++ b/sysdeps/s390/strpbrk-vx.S
@@ -16,7 +16,9 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
+#include <ifunc-strpbrk.h>
+
+#if HAVE_STRPBRK_Z13
 
 # include "sysdep.h"
 # include "asm-syntax.h"
@@ -59,7 +61,7 @@
 	otherwise =0;
    r9:  loaded byte count of vlbb accept-string
 */
-ENTRY(__strpbrk_vx)
+ENTRY(STRPBRK_Z13)
 	.machine "z13"
 	.machinemode "zarch_nohighgprs"
 
@@ -298,5 +300,14 @@ ENTRY(__strpbrk_vx)
 	vlgvg	%r9,%v31,1
 	lgr	%r2,%r1
 	br	%r14
-END(__strpbrk_vx)
-#endif /* HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc) */
+END(STRPBRK_Z13)
+
+# if ! HAVE_STRPBRK_IFUNC
+strong_alias (STRPBRK_Z13, strpbrk)
+# endif
+
+# if ! HAVE_STRPBRK_C && defined SHARED && IS_IN (libc)
+strong_alias (STRPBRK_Z13, __GI_strpbrk)
+# endif
+
+#endif /* HAVE_STRPBRK_Z13  */
diff --git a/sysdeps/s390/multiarch/strpbrk.c b/sysdeps/s390/strpbrk.c
similarity index 70%
rename from sysdeps/s390/multiarch/strpbrk.c
rename to sysdeps/s390/strpbrk.c
index 11afc268f702ce09..41ce00a1aedf0020 100644
--- a/sysdeps/s390/multiarch/strpbrk.c
+++ b/sysdeps/s390/strpbrk.c
@@ -16,7 +16,9 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
+#include <ifunc-strpbrk.h>
+
+#if HAVE_STRPBRK_IFUNC
 # define strpbrk __redirect_strpbrk
 /* Omit the strpbrk inline definitions because it would redefine strpbrk.  */
 # define __NO_STRING_INLINES
@@ -24,8 +26,17 @@
 # undef strpbrk
 # include <ifunc-resolve.h>
 
-s390_vx_libc_ifunc2_redirected (__redirect_strpbrk, __strpbrk, strpbrk)
+# if HAVE_STRPBRK_C
+extern __typeof (__redirect_strpbrk) STRPBRK_C attribute_hidden;
+# endif
+
+# if HAVE_STRPBRK_Z13
+extern __typeof (__redirect_strpbrk) STRPBRK_Z13 attribute_hidden;
+# endif
 
-#else
-# include <string/strpbrk.c>
-#endif /* !(defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)) */
+s390_libc_ifunc_expr (__redirect_strpbrk, strpbrk,
+		      (HAVE_STRPBRK_Z13 && (hwcap & HWCAP_S390_VX))
+		      ? STRPBRK_Z13
+		      : STRPBRK_DEFAULT
+		      )
+#endif /* HAVE_STRPBRK_IFUNC  */
