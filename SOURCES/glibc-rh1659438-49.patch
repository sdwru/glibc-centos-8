commit 8507e831907ff46d06382fe453c6832db2594e0b
Author: Stefan Liebler <stli@linux.ibm.com>
Date:   Tue Dec 18 13:57:23 2018 +0100

    S390: Refactor wcsspn ifunc handling.
    
    The ifunc handling for wcsspn is adjusted in order to omit ifunc
    if the minimum architecture level already supports newer CPUs by default.
    Unfortunately the c ifunc variant can't be omitted at all as it is used
    by the z13 ifunc variant as fallback if the pointers are not 4-byte aligned.
    Glibc internal calls will use the "newer" ifunc variant.
    
    ChangeLog:
    
            * sysdeps/s390/multiarch/Makefile
            (sysdep_routines): Remove wcsspn variants.
            * sysdeps/s390/Makefile (sysdep_routines): Add wcsspn variants.
            * sysdeps/s390/multiarch/ifunc-impl-list.c
            (__libc_ifunc_impl_list): Refactor ifunc handling for wcsspn.
            * sysdeps/s390/multiarch/wcsspn-c.c: Move to ...
            * sysdeps/s390/wcsspn-c.c: ... here and adjust ifunc handling.
            * sysdeps/s390/multiarch/wcsspn-vx.S: Move to ...
            * sysdeps/s390/wcsspn-vx.S: ... here and adjust ifunc handling.
            * sysdeps/s390/multiarch/wcsspn.c: Move to ...
            * sysdeps/s390/wcsspn.c: ... here and adjust ifunc handling.
            * sysdeps/s390/ifunc-wcsspn.h: New file.

diff --git a/sysdeps/s390/Makefile b/sysdeps/s390/Makefile
index 19a556eccf285e2f..38dbba8ccfd3cd66 100644
--- a/sysdeps/s390/Makefile
+++ b/sysdeps/s390/Makefile
@@ -72,5 +72,6 @@ sysdep_routines += wcslen wcslen-vx wcslen-c \
 		   wcsncmp wcsncmp-vx wcsncmp-c \
 		   wcschr wcschr-vx wcschr-c \
 		   wcschrnul wcschrnul-vx wcschrnul-c \
-		   wcsrchr wcsrchr-vx wcsrchr-c
+		   wcsrchr wcsrchr-vx wcsrchr-c \
+		   wcsspn wcsspn-vx wcsspn-c
 endif
diff --git a/sysdeps/s390/ifunc-wcsspn.h b/sysdeps/s390/ifunc-wcsspn.h
new file mode 100644
index 0000000000000000..1189c6b93ff9fbec
--- /dev/null
+++ b/sysdeps/s390/ifunc-wcsspn.h
@@ -0,0 +1,53 @@
+/* wcsspn variant information on S/390 version.
+   Copyright (C) 2018 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#if defined USE_MULTIARCH && IS_IN (libc)		\
+  && ! defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT
+# define HAVE_WCSSPN_IFUNC	1
+#else
+# define HAVE_WCSSPN_IFUNC	0
+#endif
+
+#ifdef HAVE_S390_VX_ASM_SUPPORT
+# define HAVE_WCSSPN_IFUNC_AND_VX_SUPPORT HAVE_WCSSPN_IFUNC
+#else
+# define HAVE_WCSSPN_IFUNC_AND_VX_SUPPORT 0
+#endif
+
+#if defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT
+# define WCSSPN_DEFAULT		WCSSPN_Z13
+/* The z13 ifunc variant is using the common code variant as fallback!  */
+# define HAVE_WCSSPN_C		1
+# define HAVE_WCSSPN_Z13	1
+#else
+# define WCSSPN_DEFAULT		WCSSPN_C
+# define HAVE_WCSSPN_C		1
+# define HAVE_WCSSPN_Z13	HAVE_WCSSPN_IFUNC_AND_VX_SUPPORT
+#endif
+
+#if HAVE_WCSSPN_C
+# define WCSSPN_C		__wcsspn_c
+#else
+# define WCSSPN_C		NULL
+#endif
+
+#if HAVE_WCSSPN_Z13
+# define WCSSPN_Z13		__wcsspn_vx
+#else
+# define WCSSPN_Z13		NULL
+#endif
diff --git a/sysdeps/s390/multiarch/Makefile b/sysdeps/s390/multiarch/Makefile
index 3d72cbb5f32e68f3..091f5150847a404a 100644
--- a/sysdeps/s390/multiarch/Makefile
+++ b/sysdeps/s390/multiarch/Makefile
@@ -1,6 +1,5 @@
 ifeq ($(subdir),wcsmbs)
-sysdep_routines += wcsspn wcsspn-vx wcsspn-c \
-		   wcspbrk wcspbrk-vx wcspbrk-c \
+sysdep_routines += wcspbrk wcspbrk-vx wcspbrk-c \
 		   wcscspn wcscspn-vx wcscspn-c \
 		   wmemchr wmemchr-vx wmemchr-c \
 		   wmemset wmemset-vx wmemset-c \
diff --git a/sysdeps/s390/multiarch/ifunc-impl-list.c b/sysdeps/s390/multiarch/ifunc-impl-list.c
index ffb4d5b6872ef9db..6f4de2845ba0a378 100644
--- a/sysdeps/s390/multiarch/ifunc-impl-list.c
+++ b/sysdeps/s390/multiarch/ifunc-impl-list.c
@@ -59,6 +59,7 @@
 #include <ifunc-wcschr.h>
 #include <ifunc-wcschrnul.h>
 #include <ifunc-wcsrchr.h>
+#include <ifunc-wcsspn.h>
 
 /* Maximum number of IFUNC implementations.  */
 #define MAX_IFUNC	3
@@ -593,6 +594,18 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
 		)
 #endif /* HAVE_WCSRCHR_IFUNC  */
 
+#if HAVE_WCSSPN_IFUNC
+    IFUNC_IMPL (i, name, wcsspn,
+# if HAVE_WCSSPN_Z13
+		IFUNC_IMPL_ADD (array, i, wcsspn,
+				dl_hwcap & HWCAP_S390_VX, WCSSPN_Z13)
+# endif
+# if HAVE_WCSSPN_C
+		IFUNC_IMPL_ADD (array, i, wcsspn, 1, WCSSPN_C)
+# endif
+		)
+#endif /* HAVE_WCSSPN_IFUNC  */
+
 #ifdef HAVE_S390_VX_ASM_SUPPORT
 
 # define IFUNC_VX_IMPL(FUNC)						\
@@ -601,8 +614,6 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
 			      __##FUNC##_vx)				\
 	      IFUNC_IMPL_ADD (array, i, FUNC, 1, __##FUNC##_c))
 
-  IFUNC_VX_IMPL (wcsspn);
-
   IFUNC_VX_IMPL (wcspbrk);
 
   IFUNC_VX_IMPL (wcscspn);
diff --git a/sysdeps/s390/multiarch/wcsspn-c.c b/sysdeps/s390/wcsspn-c.c
similarity index 72%
rename from sysdeps/s390/multiarch/wcsspn-c.c
rename to sysdeps/s390/wcsspn-c.c
index 2c0bd0f4e69516de..db3bdb9b9f09e500 100644
--- a/sysdeps/s390/multiarch/wcsspn-c.c
+++ b/sysdeps/s390/wcsspn-c.c
@@ -16,16 +16,22 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
-# define WCSSPN  __wcsspn_c
+#include <ifunc-wcsspn.h>
 
-# include <wchar.h>
-extern __typeof (wcsspn) __wcsspn_c;
-# ifdef SHARED
-#  undef libc_hidden_def
-#  define libc_hidden_def(name)				\
+#if HAVE_WCSSPN_C
+# if HAVE_WCSSPN_IFUNC || HAVE_WCSSPN_Z13
+#  define WCSSPN WCSSPN_C
+
+#  if defined SHARED && IS_IN (libc)
+#   undef libc_hidden_def
+#   if ! defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT
+#    define libc_hidden_def(name)			\
   __hidden_ver1 (__wcsspn_c, __GI_wcsspn, __wcsspn_c);
-# endif /* SHARED */
+#   else
+#    define libc_hidden_def(name)
+#   endif
+#  endif
+# endif
 
 # include <wcsmbs/wcsspn.c>
-#endif /* HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc) */
+#endif
diff --git a/sysdeps/s390/multiarch/wcsspn-vx.S b/sysdeps/s390/wcsspn-vx.S
similarity index 97%
rename from sysdeps/s390/multiarch/wcsspn-vx.S
rename to sysdeps/s390/wcsspn-vx.S
index 548f2ad1644c8e88..61f7d6d0902125b7 100644
--- a/sysdeps/s390/multiarch/wcsspn-vx.S
+++ b/sysdeps/s390/wcsspn-vx.S
@@ -16,7 +16,8 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
+#include <ifunc-wcsspn.h>
+#if HAVE_WCSSPN_Z13
 
 # include "sysdep.h"
 # include "asm-syntax.h"
@@ -57,7 +58,7 @@
 	otherwise =0;
    r9: loaded byte count of vlbb accept-string
 */
-ENTRY(__wcsspn_vx)
+ENTRY(WCSSPN_Z13)
 	.machine "z13"
 	.machinemode "zarch_nohighgprs"
 
@@ -265,6 +266,15 @@ ENTRY(__wcsspn_vx)
 	j	.Lslow_next_acc_notonbb /* ... and search for zero in
 					   fully loaded vreg again.  */
 .Lfallback:
-	jg	__wcsspn_c
-END(__wcsspn_vx)
-#endif /* HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc) */
+	jg	WCSSPN_C
+END(WCSSPN_Z13)
+
+# if ! HAVE_WCSSPN_IFUNC
+strong_alias (WCSSPN_Z13, wcsspn)
+# endif
+
+# if defined HAVE_S390_MIN_Z13_ZARCH_ASM_SUPPORT \
+	&& defined SHARED && IS_IN (libc)
+strong_alias (WCSSPN_Z13, __GI_wcsspn)
+# endif
+#endif
diff --git a/sysdeps/s390/multiarch/wcsspn.c b/sysdeps/s390/wcsspn.c
similarity index 69%
rename from sysdeps/s390/multiarch/wcsspn.c
rename to sysdeps/s390/wcsspn.c
index 7743144a8ca7c2ee..e916b1e4414e774d 100644
--- a/sysdeps/s390/multiarch/wcsspn.c
+++ b/sysdeps/s390/wcsspn.c
@@ -16,14 +16,24 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
-#if defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)
+#include <ifunc-wcsspn.h>
+
+#if HAVE_WCSSPN_IFUNC
 # define wcsspn __redirect_wcsspn
 # include <wchar.h>
 # undef wcsspn
 # include <ifunc-resolve.h>
+# if HAVE_WCSSPN_C
+extern __typeof (__redirect_wcsspn) WCSSPN_C attribute_hidden;
+# endif
 
-s390_vx_libc_ifunc2_redirected (__redirect_wcsspn, __wcsspn, wcsspn)
+# if HAVE_WCSSPN_Z13
+extern __typeof (__redirect_wcsspn) WCSSPN_Z13 attribute_hidden;
+# endif
 
-#else
-# include <wcsmbs/wcsspn.c>
-#endif /* !(defined HAVE_S390_VX_ASM_SUPPORT && IS_IN (libc)) */
+s390_libc_ifunc_expr (__redirect_wcsspn, wcsspn,
+		      (HAVE_WCSSPN_Z13 && (hwcap & HWCAP_S390_VX))
+		      ? WCSSPN_Z13
+		      : WCSSPN_DEFAULT
+		      )
+#endif
